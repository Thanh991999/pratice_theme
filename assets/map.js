if(!customElements.get("sht-map")){class a extends HTMLElement{constructor(){super(),this.iframe=this.querySelector(".js-map-iframe"),this.bindEventHandlers()}loadIframeContent(){new IntersectionObserver((t,e)=>{t.forEach(t=>{t.isIntersecting&&(this.dispatchEvent(new CustomEvent("loadingStart",{detail:{ele:this.iframe,parent:this}})),this.execute(),e.unobserve(t.target))})},{rootMargin:"0px 0px -100px 0px"}).observe(this)}bindEventHandlers(){this.iframe.addEventListener("load",function(){this.dispatchEvent(new CustomEvent("loadingEnd",{detail:{ele:this.iframe,parent:this}})),this.setAttribute("loaded",!0)}.bind(this))}execute(){this.setIframeSrc()}setIframeSrc(){var t=`https://maps.google.com/maps?z=${this.dataZoom}&t=${this.dataType}&q=${this.dataLocation.replace(/"/g,"")}&ie=UTF8&&output=embed`;this.iframe.src=t,this.iframe.removeAttribute("srcdoc")}static get observedAttributes(){return["data-zoom","data-type","data-location"]}attributeChangedCallback(t,e,a){e!==a&&(Shopify.designMode?this.execute():this.loadIframeContent())}connectedCallback(){}disconnectedCallback(){}get dataZoom(){return this.getAttribute("data-zoom")}get dataType(){return this.getAttribute("data-type")}get dataLocation(){return this.getAttribute("data-location")}set dataZoom(t){this.setAttribute("data-zoom",t)}set dataType(t){this.setAttribute("data-type",t)}set dataLocation(t){this.setAttribute("data-location",t)}}customElements.define("sht-map",a)}